@model WebApp.DTOs.GameDto;
@using System.Security.Claims

@{
    ViewData["Title"] = "Create";

    var identity = (ClaimsIdentity)Context.User.Identity;
    Claim? idClaim = identity.Claims.SingleOrDefault(claim => claim.Type == ClaimTypes.NameIdentifier);
    string? streamerId = idClaim?.Value;

    IEnumerable<QuestionPack> questionPacks = ViewData["QuestionPacks"] as IEnumerable<QuestionPack>;
}


<div class="navbar-offset center">
    <h1>Create</h1>

    <h4>Game</h4>
    <form asp-action="Create">
        <div asp-validation-summary="ModelOnly" class="text-danger"></div>
        <div class="form-group" hidden>
            <input asp-for="StreamerId" class="form-control" value=@streamerId />
        </div>
        <div class="form-group">
            <label asp-for="TimeLimitSeconds" class="control-label">Time Limit</label>
            <input asp-for="TimeLimitSeconds" class="form-control" />
            <span asp-validation-for="TimeLimitSeconds" class="text-danger"></span>
        </div>
        <div class="form-group" hidden>
            <input asp-for="ModeId" class="form-control" value="1"/>
        </div>
        <div class="form-group">
            <label asp-for="QuestionPackId" class="control-label">Question Pack</label>
            <select asp-for="QuestionPackId" class="form-select" aria-label="Default select example">
                @foreach (QuestionPack questionPack in questionPacks.Where(q => q.Questions.Count != 0))
                {
                    <option value="@questionPack.Id">@questionPack.Name</option>
                }
            </select>
            <span asp-validation-for="QuestionPackId" class="text-danger"></span>
        </div>
        <center class="mt-2">
            <input type="submit" value="Play" class="btn login-button" />
        </center>
    </form>
</div>

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
}
