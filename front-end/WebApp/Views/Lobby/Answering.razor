@using WebApp.Models;

<div id="game" class="center answer">
    <h1 class="answer-title">@Question.Prompt</h1>
    <div class="answer-grid">
        @for (int i = 0; i < Question.Answers.Count; i++)
        {
            <div class="answer-item" style="@(FlippedAnswers[i] ? "Background-color:red" : "")">
                <p class="answer-id">#@(i + 1)</p>
                <div>
                    <p>@(FlippedAnswers[i] ? Question.Answers[i].Text : "???")</p>
                    <p>@(FlippedAnswers[i] ? Question.Answers[i].Points : "")</p>
                </div>
            </div>
        }
    </div>
    <input type="text" value="@Text" @oninput="this.OnChange" @onkeypress="PressKey"/>
    <button @onclick="CheckAnswer">Send</button>
</div>

@foreach (Player player in Players)
{
    <span>
        @player.Name
        Wrong: 
        @player.WrongAnswers
        Points: 
        @player.Points
    </span>
}


@code {
    [Parameter]
    public Question<Answer>? Question { get; set; }
    [Parameter]
    public EventCallback<string> Answer { get; set; }
    [Parameter]
    public bool[] FlippedAnswers { get; set; }
    [Parameter]
    public List<Player> Players { get; set; }
    public string Text { get; set; }

    public void OnChange(ChangeEventArgs e)
    {
        Text = e.Value.ToString();
    }

    public async Task PressKey(KeyboardEventArgs keyboardEventArgs)
    {
        if (keyboardEventArgs.Key == "Enter")
        {
            await CheckAnswer();
        }
    }

    public async Task CheckAnswer()
    {
        await Answer.InvokeAsync(Text);
    }
}
